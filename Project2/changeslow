#def changeslow(amount, coins):

#if there is a k cent coin thent that one is the minimum
#	coins_size = 0
#	num_coins = 0
#	for i in coins:
#		coins_size = coins_size + 1
#		if amount == i:
#			num_coins = 1
#			print i
#			return num_coins
#	
	
#	print  coins_size
#	return num_coins

#	for i in coins:
#		if amount > i:

#recursive change slow
def changeslow(amount, coins, coinsUsed):
	num_coins = 0
	coinCount = len(coins)
	#Check to see if the amount sent is the value of a coint
	for i in reversed(coins):
		coinCount-=1
		if amount == i:
			coinsUsed[coinCount]+=1
			num_coins = sum(coinsUsed) #easy way to know the total number of coins
			return num_coins, coinsUsed
	#If the value isn't a value of a coin check to see what is the largest
	#coin that the amount is larger than, subtract that, add the coin to the coinsUsed array
	#then send the remainder back through
	for i in reversed(coins):
		coinCount-=1
		if i < amount: #coin value is less than amount
			coinsUsed[coinCount]+=1
			amount = amount-i
			changeslow(amount, coins, coinsUsed)
			num_coins = sum(coinsUsed)
			return num_coins, coinsUsed
	return num_coins, coinsUsed		


print changeslow(25, [1, 5, 10, 25, 50], [0, 0, 0, 0, 0])
